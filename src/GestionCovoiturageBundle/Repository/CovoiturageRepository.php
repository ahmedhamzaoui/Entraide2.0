<?php

namespace GestionCovoiturageBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CovoiturageRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class CovoiturageRepository extends EntityRepository
{
    function recherche($r){
        return $this->createQueryBuilder('e')
            ->where('e.depart Like :v')
            ->andWhere('e.arrive Like :v')
            ->andWhere('e.date = :v')
            ->setParameter('v','%'.$r.'%')
            ->getQuery()
            ->getResult();
    }


    public function rechercherDQL( $depart)
    {
        $qd = $this->getEntityManager()
            ->createQuery("SELECT v FROM GestionCovoiturageBundle:Covoiturage v WHERE v.depart like :depart ")
            ->setParameter('depart', $depart)
            ;
        return $qd->getResult();
    }

    public function findAnnonces($depart,$arrive,$date){
        $query= $this->getEntityManager()->createQuery("SELECT v FROM GestionCovoiturageBundle:Covoiturage v WHERE v.depart = :depart AND  v.arrive =:arrive AND  v.date =:date ")
            ->setParameter('depart', $depart)
            ->setParameter('arrive', $arrive)
        ->setParameter('date', '%'.$date.'%');

        return $query->getResult();
    }
    public function findAnnoncesAll(){
        $query= $this->getEntityManager()->createQuery("SELECT v FROM GestionCovoiturageBundle:Covoiturage v ORDER BY  v.dateSys DESC ") ;


        return $query->getResult();
    }
    public function findAnnoncesDepart($depart,$date){
        $query= $this->getEntityManager()->createQuery("SELECT v FROM GestionCovoiturageBundle:Covoiturage v WHERE v.depart =:depart  AND  v.date =:date ORDER BY  v.dateSys DESC ")
            ->setParameter('depart', $depart)
            ->setParameter('date', '%'.$date.'%');

        return $query->getResult();
    }
    public function findAnnoncesDepartArrive($depart,$arrive){
        $query= $this->getEntityManager()->createQuery("SELECT v FROM GestionCovoiturageBundle:Covoiturage v WHERE v.depart =:depart  AND  v.arrive =:arrive ORDER BY  v.dateSys DESC ")
            ->setParameter('depart', $depart)
            ->setParameter('arrive', $arrive);

        return $query->getResult();
    }
    public function findAnnoncesDepar($depart){
        $query= $this->getEntityManager()->createQuery("SELECT v FROM GestionCovoiturageBundle:Covoiturage v WHERE v.depart =:depart ORDER BY  v.dateSys DESC  ")
            ->setParameter('depart', $depart);


        return $query->getResult();
    }
    public function findAnnoncesArrive($arrive,$date){
        $query= $this->getEntityManager()->createQuery("SELECT v FROM GestionCovoiturageBundle:Covoiturage v WHERE   v.arrive like :arrive AND  v.date like :date ORDER BY  v.dateSys DESC ")

            ->setParameter('arrive', '%'.$arrive.'%')
            ->setParameter('date', '%'.$date.'%');

        return $query->getResult();
    }
    public function findAnnoncesArriv($arrive){
        $query= $this->getEntityManager()->createQuery("SELECT v FROM GestionCovoiturageBundle:Covoiturage v WHERE   v.arrive =:arrive ORDER BY  v.dateSys DESC  ")

            ->setParameter('arrive', $arrive);


        return $query->getResult();
    }
    public function findAnnoncesDate($date){
        $query= $this->getEntityManager()->createQuery("SELECT v FROM GestionCovoiturageBundle:Covoiturage v WHERE    v.date like :date ORDER BY  v.dateSys DESC ")


            ->setParameter('date', '%'.$date.'%');

        return $query->getResult();
    }
    public function findAnnoncesRes($id){
        $query= $this->getEntityManager()->createQuery("SELECT v FROM GestionCovoiturageBundle:Reservationcovoiturage v WHERE    v.idReserve =:id ORDER BY  v.date_sys DESC ")


            ->setParameter('idReserve', '%'.$id.'%');

        return $query->getResult();
    }
    public function findByp($prixMin,$prixMax)

    {

        $query = $this->createQueryBuilder('a');

        $query->where('a.prix BETWEEN :prixMin AND :prixMax ORDER BY  a.dateSys DESC ')
            ->setParameter('prixMin', $prixMin)
            ->setParameter('prixMax', $prixMax);

        return $query->getQuery()->getResult();
    }

}
